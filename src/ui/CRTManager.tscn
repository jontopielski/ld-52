[gd_scene load_steps=5 format=2]

[ext_resource path="res://sprites/ui/Screenshot.png" type="Texture" id=1]
[ext_resource path="res://src/ui/CRTManager.gd" type="Script" id=2]

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform vec4 white_color : hint_color = vec4(1.0);

void fragment() {
	float rgb_avg = (white_color.r + white_color.g + white_color.b) / 3.0;
	float distance_from_center = abs(length(SCREEN_UV - vec2(0.5, 0.5)) - length(vec2(0.8 + (1.0 - rgb_avg) / 2.0)));
	COLOR = texture(SCREEN_TEXTURE, SCREEN_UV);
	COLOR.rgb = mix(COLOR.rgb, vec3(mix(COLOR.r, 0.25, mix(0.1, 0.15, rgb_avg)), mix(COLOR.g, 0.25, mix(0.1, 0.15, rgb_avg)), mix(COLOR.b, 0.5, mix(0.25, 0.1, rgb_avg))), float(int(UV.y * 144.0) % 2 == 0));
	COLOR.r = mix(COLOR.r - .025, COLOR.r, min(0.5, distance_from_center));
	COLOR.g = mix(COLOR.g - .025, COLOR.g, min(0.7, distance_from_center));
	COLOR.b = mix(COLOR.b + .025, COLOR.b, min(0.9, distance_from_center));
	float current_rgb_avg = (COLOR.r + COLOR.g + COLOR.b) / 3.0;
	float both_color_avg = (rgb_avg + current_rgb_avg) / 2.0;
	vec3 darkened_color = mix(COLOR.rgb - vec3(0.5), COLOR.rgb, min(0.9, distance_from_center));
	vec3 sandy_color = mix(COLOR.rgb, COLOR.rgb - vec3(0.35 * (current_rgb_avg - 1.0)), min(0.25, distance_from_center));
	COLOR.rgb = mix(sandy_color, darkened_color, current_rgb_avg);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/white_color = Color( 1, 1, 1, 1 )

[node name="CRTManager" type="CanvasLayer"]
layer = 6
script = ExtResource( 2 )

[node name="Example" type="TextureRect" parent="."]
modulate = Color( 0.94902, 0, 0, 1 )
anchor_right = 1.0
anchor_bottom = 1.0
rect_pivot_offset = Vector2( 88, 72 )
mouse_filter = 2
texture = ExtResource( 1 )
stretch_mode = 2

[node name="CRT" type="ColorRect" parent="."]
material = SubResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
