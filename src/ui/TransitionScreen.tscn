[gd_scene load_steps=17 format=2]

[ext_resource path="res://src/ui/TransitionScreen.gd" type="Script" id=1]
[ext_resource path="res://sprites/ui/Screenshot.png" type="Texture" id=2]
[ext_resource path="res://src/shaders/SquareIn.tres" type="Material" id=3]
[ext_resource path="res://src/shaders/CircleOut.tres" type="Material" id=4]
[ext_resource path="res://src/shaders/ClampIn.tres" type="Material" id=5]

[sub_resource type="Shader" id=14]
code = "shader_type canvas_item;

uniform float percent_visible : hint_range(0.0, 1.0) = 1.0;

void fragment() {
	float actual_percent = (percent_visible + 1.0) / 2.0;
	COLOR = texture(TEXTURE, UV);
	COLOR = mix(vec4(0.0), COLOR, float(bool(UV.y > actual_percent || (1.0 - UV.y) > actual_percent)));
}"

[sub_resource type="ShaderMaterial" id=15]
shader = SubResource( 14 )
shader_param/percent_visible = 0.0

[sub_resource type="Animation" id=2]
length = 0.001

[sub_resource type="Animation" id=9]
resource_name = "circle_in"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Circle:material:shader_param/visible_diameter")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.85, 0.0 ]
}

[sub_resource type="Animation" id=17]
resource_name = "circle_out"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Circle:material:shader_param/visible_diameter")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[sub_resource type="Animation" id=10]
resource_name = "clamp_in"
length = 0.5
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Clamp:material")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 5 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Clamp:material:shader_param/percent_visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}

[sub_resource type="Animation" id=13]
resource_name = "fast_clamp_in"
length = 0.25
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Clamp:material")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 5 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Clamp:material:shader_param/percent_visible")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.25 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}

[sub_resource type="Animation" id=16]
resource_name = "reverse_clamp_out"
length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath("ReverseClamp:material:shader_param/percent_visible")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[sub_resource type="Animation" id=6]
resource_name = "square_in"
length = 0.5
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Clamp:material:shader_param/percent_visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Clamp:material")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 3 ) ]
}

[sub_resource type="Animation" id=12]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Clamp:rect_scale")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1e-05, 1e-05 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "warp_out"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Clamp:rect_scale")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 2, 2 ) ]
}

[node name="TransitionScreen" type="CanvasLayer"]
layer = 4
script = ExtResource( 1 )

[node name="Clamp" type="TextureRect" parent="."]
material = ExtResource( 5 )
anchor_right = 1.0
anchor_bottom = 1.0
rect_pivot_offset = Vector2( 88, 72 )
mouse_filter = 2
texture = ExtResource( 2 )
stretch_mode = 2

[node name="ReverseClamp" type="TextureRect" parent="."]
material = SubResource( 15 )
anchor_right = 1.0
anchor_bottom = 1.0
rect_pivot_offset = Vector2( 88, 72 )
mouse_filter = 2
texture = ExtResource( 2 )
stretch_mode = 2

[node name="Circle" type="TextureRect" parent="."]
material = ExtResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0
rect_pivot_offset = Vector2( 88, 72 )
mouse_filter = 2
texture = ExtResource( 2 )
stretch_mode = 2

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 2 )
anims/circle_in = SubResource( 9 )
anims/circle_out = SubResource( 17 )
anims/clamp_in = SubResource( 10 )
anims/fast_clamp_in = SubResource( 13 )
anims/reverse_clamp_out = SubResource( 16 )
anims/square_in = SubResource( 6 )
anims/warp_in = SubResource( 12 )
anims/warp_out = SubResource( 3 )

[node name="Tween" type="Tween" parent="."]

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
